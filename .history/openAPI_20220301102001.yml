openapi: 3.0.3
info:
  title: Cutomizable Wedding Web App
  version: v1
paths:
  /accounts:
    x-controller: accounts
    post:
      x-operation: createAccount
      tags:
        - Accounts
      security:
        - cookieAuth: []
      summary: Create an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
            example:
              username: aedawes
              password: secretPassword
      responses:
        201:
          description: Account created
  /accounts/{accountId}:
    x-controller: accounts
    parameters:
      - name: accountId
        in : path
        required: true
        schema: 
          type: string
    put:
      x-operation: updateAccount
      tags:
        - Accounts
      summary: Update the Account
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username: 
                  type: string
                password: 
                  type: string
            example: 
              username: aedawes
              password: secretPassword
      responses:
        200:
          description: Account is updated.
    delete:
      x-operation: deleteAccount
      tags: 
        - Accounts
      summary: Delete an account.
      responses:
        204:
          description: Account deleted
  /accounts/{accountId}/login:
    x-controller: accounts
    parameters:
      - name: accountId
        in : path
        required: true
        schema: 
          type: string
    put: 
      x-operation: login
      tags:
        - Accounts
      summary: Log into an account
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username: 
                  type: string
                password: 
                  type: string
            example: 
              username: aedawes
              password: secretPassword
      responses:
        200:
          description: User is logged in
  /accounts/{accountId}/logout:
    x-controller: accounts
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    put:
      x-operation: logout
      tags:
        - Accounts
      summary: Log out of an account
      responses:
        205:
          description: User is logged out
  /{accountId}:
    x-controller: accounts
    parameters:
      - $ref: '#/components/parameters/PathAccountId'
    get:
      x-operation: getHome
      tags:
        - Accounts
      summary: Get the home page
      responses:
        200:
          description: Home page loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Home'
        401:
          description: Not authenticated.
        403:
          description: Access denied.
        404:
          description: No page found.
  /forms:
    # x-controller: forms
    put:
      # x-operation: updateForm
      tags:
        - Forms
      summary: Update the form
      requestBody:
        required: true
        content: 
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Home'
            example: 
              coupleName: John, Sarah, Smith
              couplePhotoOne: UGxhY2Vob2xkZXIK
              addressOne: The venue, 123 Sesame st
              addressOnePhoto: UGxhY2Vob2xkZXIK
              addressTwo: The venue, 456 hilltop rd
              addressTwoPhoto: UGxhY2Vob2xkZXIK
              couplePhotoTwo: UGxhY2Vob2xkZXIK
              addRegistryLink: www.website.com/ourRegistry
      responses:
        200:
          description: Task succesfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Home'
        401:
          description: Not authenticated.
        403:
          description: Access denied.
  /guests:
    # x-controller: guests
    parameters:
      - name: guestId
        in: query
        schema:
          type: string
    get:
      # x-operation: getGuests
      tags:
        - Guests
      summary: Get the guest list
      responses:
        200:
          description: Guest list loaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guests'
        401:
          description: Not authenticated.
        403:
          description: Access denied.
        404:
          description: No page found.
  /guests/{accountId}/addGuest:
    # x-controller: guests
    parameters:
      - name: accountId
        in : path
        required: true
        schema: 
          type: string
      - name: guestId
        in: query
        schema:
          type: string
    put:
      # x-operation: addGuest
      tags: 
        - Guests
      summary: Add a guest to the list
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              required:
                - guestName
                - guestEmail
              properties:
                guestName: 
                  type: string
                guestEmail: 
                  type: string
            example: 
              guestName: John Smith
              guestEmail: foo@mail.com
      responses:
        200:
          description: Guest successfully added to the list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guests'
        401:
          description: Not authenticated.
        403:
          description: Access denied.
  /guests/{accountId}/deleteGuest:
    # x-controller: guests
    parameters:
      - name: accountId
        in : path
        required: true
        schema: 
          type: string
      - name: guestId
        in: query
        schema:
          type: string
    delete:
      # x-operation: deleteGuest
      tags: 
        - Guests
      summary: Delete a guest.
      responses:
        204:
          description: Guest deleted
            
components:
  parameters:
    PathAccountId:
      name: accountId
      in: path
      required: true
      schema:
        type: string
  schemas:
    Home:
      type: object
      required:
        - coupleName
        - couplePhotoOne
        - addressOne
        - addressOnePhoto
        - couplePhotoTwo
        - addRegistryLink
      properties:
        coupleName: 
          type: string
        couplePhotoOne: 
          type: string
          format: byte
        addressOne:
          type: string
        addressOnePhoto:
          type: string
          format: byte
        addressTwo:
          type: string
        addressTwoPhoto:
          type: string
          format: byte
        couplePhotoTwo:
          type: string
          format: byte
        addRegistryLink:
          type: string
    Guests:
      type: object
      properties:
        guestName: 
          type: string
        guestEmail:
          type: string
