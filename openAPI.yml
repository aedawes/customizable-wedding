openapi: 3.0.3
info:
  title: Cutomizable Wedding Web App
  version: v1
paths:
  /accounts:
    post:
      tags:
        - Accounts
      summary: Create an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - name
                - password
              properties:
                username:
                  type: string
                name: 
                  type: string
                password:
                  type: string
            example:
              username: aedawes
              name: Anais
              password: secretPassword
      responses:
        201:
          description: Account created
  /accounts/{accountId}:
    parameters:
      - name: accountId
        in : path
        required: true
        schema: 
          type: string
    delete:
      tags: 
        - Accounts
      summary: Delete an account.
      responses:
        204:
          description: Account deleted
  /accounts/{accountId}/login:
    parameters:
      - name: accountId
        in : path
        required: true
        schema: 
          type: string
    put: 
      tags:
        - Accounts
      summary: Log into an account
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username: 
                  type: string
                password: 
                  type: string
            example: 
              username: aedawes
              password: secretPassword
      responses:
        200:
          description: User is logged in
  /accounts/{accountId}/logout:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Accounts
      summary: Log out of an account
      responses:
        205:
          description: User is logged out
  /forms:
    put:
      tags:
        - Forms
      summary: Update the form
      requestBody:
        required: true
        content: 
          multipart/form-data:
            schema:
              type: object
              required:
                - coupleName
                - couplePhotoOne
                - addressOne
                - addressOnePhoto
                - couplePhotoTwo
                - addRegistryLink
              properties:
                coupleName: 
                  type: string
                couplePhotoOne: 
                  type: string
                  format: byte
                addressOne:
                  type: string
                addressOnePhoto:
                  type: string
                  format: byte
                addressTwo:
                  type: string
                addressTwoPhoto:
                  type: string
                  format: byte
                couplePhotoTwo:
                  type: string
                  format: byte
                addRegistryLink:
                  type: string
            example: 
              coupleName: John, Sarah, Smith
              couplePhotoOne: UGxhY2Vob2xkZXIK
              addressOne: The venue, 123 Sesame st
              addressOnePhoto: UGxhY2Vob2xkZXIK
              addressTwo: The venue, 456 hilltop rd
              addressTwoPhoto: UGxhY2Vob2xkZXIK
              couplePhotoTwo: UGxhY2Vob2xkZXIK
              addRegistryLink: www.website.com/ourRegistry
      responses:
        200:
          description: Form successfully updated
  /guests/{accountId}/addGuest:
    parameters:
      - name: accountId
        in : path
        required: true
        schema: 
          type: string
      - name: guestId
        in: query
        schema:
          type: string
    delete:
      tags: 
        - Guests
      summary: Add a guest to the list
      responses:
        200:
          description: Guest successfully added to the list
  /guests/{accountId}/deleteGuest:
    parameters:
      - name: accountId
        in : path
        required: true
        schema: 
          type: string
      - name: guestId
        in: query
        schema:
          type: string
    delete:
      tags: 
        - Guests
      summary: Delete an account.
      responses:
        204:
          description: Guest deleted
        
